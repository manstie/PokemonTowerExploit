#!/usr/bin/python
#from win32 import win32gui, win32ui, win32con, win32api
from PyQt5.QtWebEngineWidgets import QWebEnginePage, QWebEngineView, QWebEngineScript
from PyQt5.QtWidgets import QApplication
from PyQt5.QtGui import QIcon, QPixmap
from PyQt5.QtCore import QUrl
import pyautogui
import keyboard
import os
import sys
import time

def main():
    app = QApplication(sys.argv)
    app.setApplicationName('PokÃ©mon Tower Battle')
    scriptDir = os.path.dirname(os.path.realpath(__file__))
    app.setWindowIcon(QIcon(scriptDir + os.path.sep + 'icon.png'))

    game = GameWindow()

    #keybinds
    keyboard.add_hotkey('f5', refresh, args=(game,))    #refresh
    keyboard.add_hotkey('ctrl+q', kill, args=(app,))    #quit

    #start gui
    app.exec_()

class GameWindow(QWebEngineView):
    def __init__(self, parent=None):
        super(QWebEngineView, self).__init__(parent)
        self.pixMapItem = None
        self.long_qdesktop_id = QApplication.desktop().winId()
        self.load(QUrl('https://www.facebook.com/instantgames/689199254876917/'))
        self.setMinimumHeight(675)
        self.setMinimumWidth(450)
        self.resize(600, 900)
        self.setCSS()
        self.show()

    def setCSS(self):
        SCRIPT = """
        var style = document.createElement('style');
        style.innerHTML = `
        ._n3{
            margin: 0 !important;
            width: 100% !important;
        }

        ._3_pc{
            max-width: none !important;
            min-width: none !important;
        }

        ._3_pc._30u8{
            height: 99.5vh !important;
            max-width: none !important;
            min-width: none !important;
        }
        `;
        document.head.appendChild(style);
        """

        #view.page().runJavaScript(SCRIPT, QWebEngineScript.ApplicationWorld)
        #inject script, run on document ready
        script = QWebEngineScript()
        script.setName("fullScreenGame")
        script.setSourceCode(SCRIPT)
        script.setInjectionPoint(QWebEngineScript.DocumentReady)
        #script.setRunsOnSubFrames(True)
        script.setWorldId(QWebEngineScript.ApplicationWorld)
        self.page().scripts().insert(script)

        #https://rosettacode.org/wiki/Color_of_a_screen_pixel
        def captureWindow(self):
            self.screenCap = QPixmap.grabWindow(long_qdesktop_id, i_x, i_y, 1, 1).toImage()

        def getPixel(self, x, y):
            long_colour = self.screenCap.pixel(x, y)
            i_colour = int(long_colour)
            return ((i_colour >> 16) & 0xff), ((i_colour >> 8) & 0xff), (i_colour & 0xff)

        def getWindowX(self):
            return self.geometry().x()

        def getWindowY(self):
            return self.geometry().y()

        def getWindowWidth(self):
            return self.width()

        def getWindowHeight(self):
            return self.height()

        def getWindowCenter(self):
            x = self.width() // 2 + self.geometry().x()
            y = self.height() // 2 + self.geometry().y()
            return (x, y)

        def getWindowN(self):
            x = self.width() // 2 + self.geometry().x()
            y = self.geometry().y()
            return (x, y)

        def getWindowNE(self):
            x = self.width() + self.geometry().x()
            y = self.geometry().y()
            return (x,y)

        def getWindowE(self):
            x = self.width() + self.geometry().x()
            y = self.height() // 2 + self.geometry().y()
            return (x, y)

        def getWindowSE(self):
            x = self.width() + self.geometry().x()
            y = self.height() + self.geometry().y()
            return (x, y)

        def getWindowS(self):
            x = self.width() // 2 + self.geometry().x()
            y = self.height() + self.geometry().y()
            return (x, y)

        def getWindowSW(self):
            x = self.geometry().x()
            y = self.height() + self.geometry().y()
            return (x,y)

        def getWindowW(self):
            x = self.geometry().x()
            y = self.height() // 2 + self.geometry().y()
            return (x, y)

        def getWindowNW(self):
            x = self.geometry().x()
            y = self.geometry().y()
            return (x, y)

        def getAdPosition(self):
            x, y = self.getWindowCenter()
            #if the window is thin, use the relative left position, else use center
            x = max(self.geometry().x() + 27, x-221)
            y = y - 170
            return (x, y)

        #turn active = (254, 5, 0)
        def getTurnTimerPosition(self):
            x, y = self.getWindowS()
            x += 34
            y -= 192
            return (x, y)

        #enemy turn = (234, 28, 36)
        #your turn = (253, 119, 62)
        def getDropPosition(self):
            x, y = self.getWindowS()
            y -= 160
            return (x,y)




def refresh(view):
    #view.reload() #crashes
    view.page().action(QWebEnginePage.Reload).trigger()

def kill(app):
    sys.exit(app.quit())


if __name__ == "__main__":
    main()