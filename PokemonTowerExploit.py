#!/usr/bin/python
#from win32 import win32gui, win32ui, win32con, win32api
from PyQt5.QtWebEngineWidgets import QWebEnginePage, QWebEngineView, QWebEngineScript
from PyQt5.QtWidgets import QApplication
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import QUrl
import pyautogui
import keyboard
import os
import sys
import time

def main():
    app = QApplication(sys.argv)
    app.setApplicationName('Pok√©mon Tower Battle')
    scriptDir = os.path.dirname(os.path.realpath(__file__))
    app.setWindowIcon(QIcon(scriptDir + os.path.sep + 'icon.png'))

    game = GameWindow()

    #keybinds
    keyboard.add_hotkey('f5', refresh, args=(game,))    #refresh
    keyboard.add_hotkey('ctrl+q', kill, args=(app,))    #quit

    #start gui
    app.exec_()

class GameWindow(QWebEngineView):
    def __init__(self, parent=None):
        super(QWebEngineView, self).__init__(parent)
        self.pixMapItem = None
        self.load(QUrl('https://www.facebook.com/instantgames/689199254876917/'))
        self.setMinimumHeight(675)
        self.setMinimumWidth(450)
        self.resize(600, 900)
        self.setCSS()
        self.show()

    def setCSS(self):
        SCRIPT = """
        var style = document.createElement('style');
        style.innerHTML = `
        ._n3{
            margin: 0 !important;
            width: 100% !important;
        }

        ._3_pc{
            max-width: none !important;
            min-width: none !important;
        }

        ._3_pc._30u8{
            height: 99.5vh !important;
            max-width: none !important;
            min-width: none !important;
        }
        `;
        document.head.appendChild(style);
        """

        #view.page().runJavaScript(SCRIPT, QWebEngineScript.ApplicationWorld)
        #inject script, run on document ready
        script = QWebEngineScript()
        script.setName("fullScreenGame")
        script.setSourceCode(SCRIPT)
        script.setInjectionPoint(QWebEngineScript.DocumentReady)
        #script.setRunsOnSubFrames(True)
        script.setWorldId(QWebEngineScript.ApplicationWorld)
        self.page().scripts().insert(script)

        def generateImage(self):
            self.pixMapItem = QGraphicsPixmapItem(QPixmap(self.local_image), None, self.local_scene)


def refresh(view):
    #view.reload() #crashes
    view.page().action(QWebEnginePage.Reload).trigger()

def kill(app):
    sys.exit(app.quit())


if __name__ == "__main__":
    main()